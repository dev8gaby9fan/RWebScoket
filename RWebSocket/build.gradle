apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'

group='com.github.fshlny'
android {
    compileSdkVersion 26
    buildToolsVersion "26.0.1"
    resourcePrefix "any things"
    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        abortOnError false
        checkReleaseBuilds false
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    //-----------------WebSocket-------------------
    compile 'com.squareup.okhttp3:okhttp:3.9.1'

    //---------------------RxAndroid------------------------------------
    compile 'io.reactivex.rxjava2:rxandroid:2.0.1'
    compile 'io.reactivex.rxjava2:rxjava:2.1.3'
}

/*install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'aar'
                // Add your description here
                name 'a WebSocket library based on OkHttp and RxJava2'     //项目的描述 你可以多写一点
                url siteUrl
                // Set your license
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id 'fshlny'        //填写的一些基本信息
                        name 'ShanFan'
                        email '467594943@qq.com'
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl
                }
            }
        }
    }
}
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}
task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}
artifacts {
    archives javadocJar
    archives sourcesJar
}
Properties properties = new Properties()
//读取properties的配置信息，当然直接把信息写到代码里也是可以的
properties.load(project.rootProject.file('local.properties').newDataInputStream())
bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")
    configurations = ['archives']
    pkg {
        repo = "maven"          //这个应该是传到maven的仓库的
        name = "okhttpDownloadManager"    //发布的项目名字
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = ["Apache-2.0"]
        publish = true
    }
}*/
/*ext {
    bintrayRepo = 'maven' // your repo name
    bintrayName = 'RWebSocket' // has to be same as your library module name
    publishedGroupId = 'com.fsh.rwebsocket' // your module package name
    libraryName = 'RWebSocket'
    artifact = 'rwebsocket' // has to be same as your library module name
    libraryDescription = 'WebSocket lib'
    siteUrl = 'https://github.com/fshlny/RWebSocket'
    gitUrl = 'https://github.com/fshlny/RWebSocket.git'
    libraryVersion = '1.0'
    developerId = 'fshlny'
    developerName = 'fshlny'
    developerEmail = '467594943@qq.com'
    licenseName = 'The Apache Software License, Version 2.0'
    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
    allLicenses = ["Apache-2.0"]
}*/

tasks.withType(org.gradle.api.tasks.javadoc.Javadoc) {
    options.encoding = "UTF-8"
}


